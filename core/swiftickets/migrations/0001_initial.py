# Generated by Django 4.2 on 2023-11-24 23:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import swiftickets.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('cpf', models.CharField(blank=True, default='', max_length=14)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('is_owner', models.BooleanField(default=False)),
                ('num_edit', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('lost_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', swiftickets.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Show', 'Show'), ('Festival', 'Festival')], max_length=14)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, default='', max_length=255)),
                ('state', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], default='Open', max_length=14)),
                ('uf', models.CharField(blank=True, choices=[('Acre', 'Acre'), ('Alagoas', 'Alagoas'), ('Amapá', 'Amapá'), ('Amazonas', 'Amazonas'), ('Bahia', 'Bahia'), ('Ceará', 'Ceará'), ('DistritoFederal', 'Distritofederal'), ('EspíritoSanto', 'Espíritosanto'), ('Goiás', 'Goiás'), ('Maranhão', 'Maranhão'), ('MatoGrosso', 'Matogrosso'), ('MatoGrossodoSul', 'Matogrossodosul'), ('MinasGerais', 'Minasgerais'), ('Pará', 'Pará'), ('Paraíba', 'Paraíba'), ('Paraná', 'Paraná'), ('Pernambuco', 'Pernambuco'), ('Piauí', 'Piauí'), ('RiodeJaneiro', 'Riodejaneiro'), ('RioGrandedoNorte', 'Riograndedonorte'), ('RioGrandedoSul', 'Riograndedosul'), ('Rondônia', 'Rondônia'), ('Roraima', 'Roraima'), ('SantaCatarina', 'Santacatarina'), ('SãoPaulo', 'Sãopaulo'), ('Sergipe', 'Sergipe'), ('Tocantins', 'Tocantins')], max_length=16, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('open_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('close_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('registrant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type', models.CharField(choices=[('Normal', 'Normal'), ('Vip', 'Vip')], max_length=14)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_available', models.PositiveIntegerField(default=0)),
                ('sale_start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sale_end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swiftickets.event')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swiftickets.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Purchase',
                'verbose_name_plural': 'Purchases',
            },
        ),
    ]
